version: "3.8"

services:
  postgres:
    image: postgres:14-alpine
    container_name: blaze-algo-db
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blaze_algo_network
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025" # SMTP port (used by Nodemailer to send emails)
      - "8025:8025" # Web interface (for viewing sent emails)
    restart: always
    networks:
      - blaze_algo_network
  app:
    build:
      context: .
      dockerfile: blaze-algo.Dockerfile # Specify the custom Dockerfile name
      no_cache: true
    container_name: blaze-algo-nodejs
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://admin:admin1234@blaze-algo-db:5432/blaze-algo?schema=public
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules # Prevents host overriding node_modules
    working_dir: /usr/src/app
    command: npm run dev
    restart: always
    networks:
      - blaze_algo_network

volumes:
  postgres_data:

networks:
  blaze_algo_network:
    driver: bridge
